<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export3.dtd">
<en-export export-date="20171101T055623Z" application="Evernote" version="Evernote Mac 6.11.1 (455059)">
<note><title>函数的属性和方法</title><content><![CDATA[<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE en-note SYSTEM 'http://xml.evernote.com/pub/enml2.dtd'><en-note lang="v2" style="color: #2c3f51; line-height: 1.6;" ><del style="position:relative;display:block;z-index:10;"><a  style="position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;" href="http://maxiang.info/#/?provider=evernote&amp;guid=bdee2e97-fdd9-499c-ab96-4d8eb3223815&amp;notebook=%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AC%94%E8%AE%B0%E6%9C%AC">Edit</a></del><div  style="color: #2c3f51; line-height: 1.6;">
                        
                    

<h5 style="font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 16px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;">函数的属性和方法</h5>

<p style="margin: 0 0 1.1em; line-height: 1.6;">fn.caller      —– 保存着调用当前函数的函数引用，如果在全局作用域调用当前函数，则返回null； <br/>
fn.length       —–函数希望接受的参数值 <br/>
fn.prototype —–保存函数的原型对象 <br/>
fn.name    —–获取函数名</p>

<h5 style="font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 16px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;">方法</h5>

<pre  style="font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;"><code  style="font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;"><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;"><span  style="display: inline; line-height: 1.6; color: #66d9ef;">fn</span>.apply<span  style="display: inline; line-height: 1.6; color: #f8f8f2;">(this,[argument])</span></span>;
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;"><span  style="display: inline; line-height: 1.6; color: #66d9ef;">fn</span>.<span  style="display: inline; line-height: 1.6; color: #66d9ef;">call</span><span  style="display: inline; line-height: 1.6; color: #f8f8f2;">(this,arg1,arg2)</span></span>;
</div></code></pre>

<p style="margin: 0 0 1.1em; line-height: 1.6;">描述：上面两个方法都用来在特殊的作用域调用函数，实际上等于设置函数体内的this对象的值。</p>

<pre  style="font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;"><code  style="font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;"><div  style="line-height: 1.6;">fn.bind(<span  style="display: inline; line-height: 1.6; color: #f92672;">this</span>)
</div></code></pre>

<p style="margin: 0 0 1.1em; line-height: 1.6;">描述：根据已有函数，创建一个被绑定新this值的函数。 <br/>
  返回值： <br/>
  {Function}被指定的this值的新函数</p>



<h4 style="font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;">ES6对函数的扩展</h4>

<p style="margin: 0 0 1.1em; line-height: 1.6;">function test(a=1,b=2){} <br/>
test.length==0; <br/>
1.<strong style="font-weight: bold; line-height: 1.6;">函数的length属性，不会计算指定默认自的参数以及后面的所有类型的参数</strong> <br/>
2.rest参数   […b] <br/>
描述：用于获取函数多余的参数，将其放入一个数组。 <br/>
<strong style="font-weight: bold; line-height: 1.6;">1.rest参数后面不能再加参数</strong> <br/>
<strong style="font-weight: bold; line-height: 1.6;">2.rest参数不能被计算到length属性中</strong></p>

<h4 style="font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;">箭头函数</h4>

<pre  style="font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;"><code  style="font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;"><div  style="line-height: 1.6;">var fn=<span  style="display: inline; line-height: 1.6; color: #f92672;"><span  style="display: inline; line-height: 1.6; color: #f8f8f2;">()</span>=&gt;</span>{}
</div></code></pre>

<p style="margin: 0 0 1.1em; line-height: 1.6;">1.箭头函数体内的this对象是函数定义所在的对象，不是使用时的动态对象。 <br/>
2.不能用箭头函数当做构造函数，也就是说不能使用new命令，否则会报错。 <br/>
3.没有argument对象，可以使用rest参数代替。 <br/>
4.不可以使用yield命令，因此箭头函数不能用作generator函数。 <br/>
5.由于箭头函数没有自己的this，所以当然也就不能用call(),apply(),bind()这些方法去改变this的指向。</p>

<p style="margin: 0 0 1.1em; line-height: 1.6;">尾递归    function f(x){return f(x)}; <br/>
尾调用    function f(x){return g(x)};</p>

<p style="margin: 0 0 1.1em; line-height: 1.6;">尾调用优化：在外层函数调用结束之后调用尾函数，外层函数的调用帧可以被清掉，大大节省内存。 <br/>
尾递归：可以保证在每个递归期间，永远只存在一个调用栈，避免普通的栈溢出的错误。</p>



<h5 style="font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 16px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;">数组</h5>

<p style="margin: 0 0 1.1em; line-height: 1.6;">创建数组：var arr=Array.of(); <br/>
Array.of()    行为始终一致，将传入的值作为数组的项，产生数组。 <br/>
将类数组转化为数组： <br/>
Array.from(obj,func,context);   返回值：生成的数组。 <br/>
原来的方法：Array.prototype.slice.call(argument);</p>

<p style="margin: 0 0 1.1em; line-height: 1.6;">数组检测：</p>

<pre  style="font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;"><code  style="font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;"><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;"><span  style="display: inline; line-height: 1.6; color: #a6e22e;">if</span><span  style="display: inline; line-height: 1.6; color: #f8f8f2;">(value instanceof Array)</span></span>{
</div><div  style="line-height: 1.6;">}
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;"><span  style="display: inline; line-height: 1.6; color: #a6e22e;">if</span><span  style="display: inline; line-height: 1.6; color: #f8f8f2;">(Array.isArray(value)</span></span>){
</div><div  style="line-height: 1.6;">}
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;"><span  style="display: inline; line-height: 1.6; color: #a6e22e;">if</span><span  style="display: inline; line-height: 1.6; color: #f8f8f2;">(Array.prototype.toString.call(obj)</span></span>===<span  style="display: inline; line-height: 1.6; color: #e6db74;">'[object Array]'</span>){}
</div></code></pre>



<h5 style="font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 16px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;">数组的方法</h5>

<p style="margin: 0 0 1.1em; line-height: 1.6;">转换方法</p>

<pre  style="font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;"><code  style="font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;"><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #e6db74;">Array</span>.toLocalString()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #e6db74;">Array</span>.toString()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #e6db74;">Array</span>.valueof()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #e6db74;">Array</span>.<span  style="display: inline; line-height: 1.6; color: #f92672;">join</span>()
</div></code></pre>

<p style="margin: 0 0 1.1em; line-height: 1.6;">栈和队列方法</p>

<pre  style="font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;"><code  style="font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;"><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.push()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.pop()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.shift()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.unshift()
</div></code></pre>

<p style="margin: 0 0 1.1em; line-height: 1.6;">排序方法：</p>

<pre  style="font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;"><code  style="font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;"><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.<span  style="display: inline; line-height: 1.6; color: #e6db74;">sort</span>()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.<span  style="display: inline; line-height: 1.6; color: #e6db74;">reverse</span>()
</div></code></pre>

<p style="margin: 0 0 1.1em; line-height: 1.6;">操作方法：</p>

<pre  style="font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;"><code  style="font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;"><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.<span  style="display: inline; line-height: 1.6; color: #e6db74;">concat</span>()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.slice()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.<span  style="display: inline; line-height: 1.6; color: #e6db74;">splice</span>()<span  style="display: inline; line-height: 1.6; color: #75715e;">//增删改查</span>
</div></code></pre>

<p style="margin: 0 0 1.1em; line-height: 1.6;">ES6新增 </p>

<pre  style="font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;"><code  style="font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;"><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.copyWithin()<span  style="display: inline; line-height: 1.6; color: #75715e;">//在数组内部进行拷贝</span>
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.<span  style="display: inline; line-height: 1.6; color: #e6db74;">fill</span>()<span  style="display: inline; line-height: 1.6; color: #75715e;">//用给定的值，填充数组</span>
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.indexOf()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.lastIndexOf()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.find()<span  style="display: inline; line-height: 1.6; color: #75715e;">//查找第一个复合条件的值</span>
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.findIndex()<span  style="display: inline; line-height: 1.6; color: #75715e;">//查找第一个返回条件的值的索引</span>
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.includes()<span  style="display: inline; line-height: 1.6; color: #75715e;">//是否包含某值</span>
</div></code></pre>

<p style="margin: 0 0 1.1em; line-height: 1.6;">迭代方法：</p>

<pre  style="font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;"><code  style="font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;"><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.forEach()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.every()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.some()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.<span  style="display: inline; line-height: 1.6; color: #e6db74;">filter</span>()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.<span  style="display: inline; line-height: 1.6; color: #e6db74;">map</span>()
</div><div  style="line-height: 1.6;">es6新增方法：
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.keys()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.value()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.entries()<span  style="display: inline; line-height: 1.6; color: #75715e;">//遍历键值对</span>
</div></code></pre>

<p style="margin: 0 0 1.1em; line-height: 1.6;">描述：迭代数组，对数组的每一项执行给定的函数。 <br/>
 归并方法：</p>

<pre  style="font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;"><code  style="font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;"><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.reduce()
</div><div  style="line-height: 1.6;"><span  style="display: inline; line-height: 1.6; color: #f92672;">Array</span>.reduceRight()
</div></code></pre>

<p style="margin: 0 0 1.1em; line-height: 1.6;">描述：迭代数组的所有项，构建一个最终的返回值。 <br/>
这两个函数除了方向不一致，其他全部一致</p></div><center style='display:none'>%23%23%23%23%23%20%u51FD%u6570%u7684%u5C5E%u6027%u548C%u65B9%u6CD5%0Afn.caller%20%20%20%20%20%20-----%20%u4FDD%u5B58%u7740%u8C03%u7528%u5F53%u524D%u51FD%u6570%u7684%u51FD%u6570%u5F15%u7528%uFF0C%u5982%u679C%u5728%u5168%u5C40%u4F5C%u7528%u57DF%u8C03%u7528%u5F53%u524D%u51FD%u6570%uFF0C%u5219%u8FD4%u56DEnull%uFF1B%0Afn.length%20%20%20%20%20%20%20-----%u51FD%u6570%u5E0C%u671B%u63A5%u53D7%u7684%u53C2%u6570%u503C%0Afn.prototype%20-----%u4FDD%u5B58%u51FD%u6570%u7684%u539F%u578B%u5BF9%u8C61%0Afn.name%20%20%20%20-----%u83B7%u53D6%u51FD%u6570%u540D%0A%0A%23%23%23%23%23%20%u65B9%u6CD5%0A%0A%20%20%20%20%0A%20%20%20%20fn.apply%28this%2C%5Bargument%5D%29%3B%0A%20%20%20%20fn.call%28this%2Carg1%2Carg2%29%3B%0A%0A%0A%u63CF%u8FF0%uFF1A%u4E0A%u9762%u4E24%u4E2A%u65B9%u6CD5%u90FD%u7528%u6765%u5728%u7279%u6B8A%u7684%u4F5C%u7528%u57DF%u8C03%u7528%u51FD%u6570%uFF0C%u5B9E%u9645%u4E0A%u7B49%u4E8E%u8BBE%u7F6E%u51FD%u6570%u4F53%u5185%u7684this%u5BF9%u8C61%u7684%u503C%u3002%0A%0A%20%20%20%20fn.bind%28this%29%0A%20%20%u63CF%u8FF0%uFF1A%u6839%u636E%u5DF2%u6709%u51FD%u6570%uFF0C%u521B%u5EFA%u4E00%u4E2A%u88AB%u7ED1%u5B9A%u65B0this%u503C%u7684%u51FD%u6570%u3002%0A%20%20%u8FD4%u56DE%u503C%uFF1A%0A%20%20%7BFunction%7D%u88AB%u6307%u5B9A%u7684this%u503C%u7684%u65B0%u51FD%u6570%0A%23%23%23%23%20ES6%u5BF9%u51FD%u6570%u7684%u6269%u5C55%0Afunction%20test%28a%3D1%2Cb%3D2%29%7B%7D%0Atest.length%3D%3D0%3B%0A1.**%u51FD%u6570%u7684length%u5C5E%u6027%uFF0C%u4E0D%u4F1A%u8BA1%u7B97%u6307%u5B9A%u9ED8%u8BA4%u81EA%u7684%u53C2%u6570%u4EE5%u53CA%u540E%u9762%u7684%u6240%u6709%u7C7B%u578B%u7684%u53C2%u6570**%0A2.rest%u53C2%u6570%20%20%20%5B...b%5D%0A%u63CF%u8FF0%uFF1A%u7528%u4E8E%u83B7%u53D6%u51FD%u6570%u591A%u4F59%u7684%u53C2%u6570%uFF0C%u5C06%u5176%u653E%u5165%u4E00%u4E2A%u6570%u7EC4%u3002%0A**1.rest%u53C2%u6570%u540E%u9762%u4E0D%u80FD%u518D%u52A0%u53C2%u6570**%0A**2.rest%u53C2%u6570%u4E0D%u80FD%u88AB%u8BA1%u7B97%u5230length%u5C5E%u6027%u4E2D**%0A%0A%23%23%23%23%20%u7BAD%u5934%u51FD%u6570%0A%0A%20%20%20%20var%20fn%3D%28%29%3D%3E%7B%7D%0A1.%u7BAD%u5934%u51FD%u6570%u4F53%u5185%u7684this%u5BF9%u8C61%u662F%u51FD%u6570%u5B9A%u4E49%u6240%u5728%u7684%u5BF9%u8C61%uFF0C%u4E0D%u662F%u4F7F%u7528%u65F6%u7684%u52A8%u6001%u5BF9%u8C61%u3002%0A2.%u4E0D%u80FD%u7528%u7BAD%u5934%u51FD%u6570%u5F53%u505A%u6784%u9020%u51FD%u6570%uFF0C%u4E5F%u5C31%u662F%u8BF4%u4E0D%u80FD%u4F7F%u7528new%u547D%u4EE4%uFF0C%u5426%u5219%u4F1A%u62A5%u9519%u3002%0A3.%u6CA1%u6709argument%u5BF9%u8C61%uFF0C%u53EF%u4EE5%u4F7F%u7528rest%u53C2%u6570%u4EE3%u66FF%u3002%0A4.%u4E0D%u53EF%u4EE5%u4F7F%u7528yield%u547D%u4EE4%uFF0C%u56E0%u6B64%u7BAD%u5934%u51FD%u6570%u4E0D%u80FD%u7528%u4F5Cgenerator%u51FD%u6570%u3002%0A5.%u7531%u4E8E%u7BAD%u5934%u51FD%u6570%u6CA1%u6709%u81EA%u5DF1%u7684this%uFF0C%u6240%u4EE5%u5F53%u7136%u4E5F%u5C31%u4E0D%u80FD%u7528call%28%29%2Capply%28%29%2Cbind%28%29%u8FD9%u4E9B%u65B9%u6CD5%u53BB%u6539%u53D8this%u7684%u6307%u5411%u3002%0A%0A%u5C3E%u9012%u5F52%20%20%20%20function%20f%28x%29%7Breturn%20f%28x%29%7D%3B%0A%u5C3E%u8C03%u7528%20%20%20%20function%20f%28x%29%7Breturn%20g%28x%29%7D%3B%0A%0A%u5C3E%u8C03%u7528%u4F18%u5316%uFF1A%u5728%u5916%u5C42%u51FD%u6570%u8C03%u7528%u7ED3%u675F%u4E4B%u540E%u8C03%u7528%u5C3E%u51FD%u6570%uFF0C%u5916%u5C42%u51FD%u6570%u7684%u8C03%u7528%u5E27%u53EF%u4EE5%u88AB%u6E05%u6389%uFF0C%u5927%u5927%u8282%u7701%u5185%u5B58%u3002%0A%u5C3E%u9012%u5F52%uFF1A%u53EF%u4EE5%u4FDD%u8BC1%u5728%u6BCF%u4E2A%u9012%u5F52%u671F%u95F4%uFF0C%u6C38%u8FDC%u53EA%u5B58%u5728%u4E00%u4E2A%u8C03%u7528%u6808%uFF0C%u907F%u514D%u666E%u901A%u7684%u6808%u6EA2%u51FA%u7684%u9519%u8BEF%u3002%0A%0A%0A%23%23%23%23%23%20%u6570%u7EC4%0A%u521B%u5EFA%u6570%u7EC4%uFF1Avar%20arr%3DArray.of%28%29%3B%0AArray.of%28%29%20%20%20%20%u884C%u4E3A%u59CB%u7EC8%u4E00%u81F4%uFF0C%u5C06%u4F20%u5165%u7684%u503C%u4F5C%u4E3A%u6570%u7EC4%u7684%u9879%uFF0C%u4EA7%u751F%u6570%u7EC4%u3002%0A%u5C06%u7C7B%u6570%u7EC4%u8F6C%u5316%u4E3A%u6570%u7EC4%uFF1A%0AArray.from%28obj%2Cfunc%2Ccontext%29%3B%20%20%20%u8FD4%u56DE%u503C%uFF1A%u751F%u6210%u7684%u6570%u7EC4%u3002%0A%u539F%u6765%u7684%u65B9%u6CD5%uFF1AArray.prototype.slice.call%28argument%29%3B%0A%0A%u6570%u7EC4%u68C0%u6D4B%uFF1A%0A%0A%20%20%20%20if%28value%20instanceof%20Array%29%7B%0A%20%20%20%20%7D%0A%09if%28Array.isArray%28value%29%29%7B%0A%09%7D%0A%09if%28Array.prototype.toString.call%28obj%29%3D%3D%3D%27%5Bobject%20Array%5D%27%29%7B%7D%0A%23%23%23%23%23%20%u6570%u7EC4%u7684%u65B9%u6CD5%0A%u8F6C%u6362%u65B9%u6CD5%0A%0A%20%20%20%20Array.toLocalString%28%29%0A%20%20%20%20Array.toString%28%29%0A%20%20%20%20Array.valueof%28%29%0A%20%20%20%20Array.join%28%29%0A%20%20%20%20%0A%u6808%u548C%u961F%u5217%u65B9%u6CD5%0A%0A%20%20%20%20Array.push%28%29%0A%20%20%20%20Array.pop%28%29%0A%20%20%20%20Array.shift%28%29%0A%20%20%20%20Array.unshift%28%29%0A%u6392%u5E8F%u65B9%u6CD5%uFF1A%0A%0A%20%20%20%20Array.sort%28%29%0A%20%20%20%20Array.reverse%28%29%0A%u64CD%u4F5C%u65B9%u6CD5%uFF1A%0A%0A%20%20%20%20Array.concat%28%29%0A%20%20%20%20Array.slice%28%29%0A%20%20%20%20Array.splice%28%29//%u589E%u5220%u6539%u67E5%0AES6%u65B0%u589E%20%0A%0A%20%20%20%20Array.copyWithin%28%29//%u5728%u6570%u7EC4%u5185%u90E8%u8FDB%u884C%u62F7%u8D1D%0A%20%20%20%20Array.fill%28%29//%u7528%u7ED9%u5B9A%u7684%u503C%uFF0C%u586B%u5145%u6570%u7EC4%0A%20%20%20%20Array.indexOf%28%29%0A%20%20%20%20Array.lastIndexOf%28%29%0A%20%20%20%20Array.find%28%29//%u67E5%u627E%u7B2C%u4E00%u4E2A%u590D%u5408%u6761%u4EF6%u7684%u503C%0A%20%20%20%20Array.findIndex%28%29//%u67E5%u627E%u7B2C%u4E00%u4E2A%u8FD4%u56DE%u6761%u4EF6%u7684%u503C%u7684%u7D22%u5F15%0A%20%20%20%20Array.includes%28%29//%u662F%u5426%u5305%u542B%u67D0%u503C%0A%u8FED%u4EE3%u65B9%u6CD5%uFF1A%0A%0A%20%20%20%20Array.forEach%28%29%0A%20%20%20%20Array.every%28%29%0A%20%20%20%20Array.some%28%29%0A%20%20%20%20Array.filter%28%29%0A%20%20%20%20Array.map%28%29%0A%20%20%20%20es6%u65B0%u589E%u65B9%u6CD5%uFF1A%0A%20%20%20%20Array.keys%28%29%0A%20%20%20%20Array.value%28%29%0A%20%20%20%20Array.entries%28%29//%u904D%u5386%u952E%u503C%u5BF9%0A%20%20%20%20%0A%u63CF%u8FF0%uFF1A%u8FED%u4EE3%u6570%u7EC4%uFF0C%u5BF9%u6570%u7EC4%u7684%u6BCF%u4E00%u9879%u6267%u884C%u7ED9%u5B9A%u7684%u51FD%u6570%u3002%0A%20%u5F52%u5E76%u65B9%u6CD5%uFF1A%0A%20%0A%0A%20%20%20%20Array.reduce%28%29%0A%20%20%20%20Array.reduceRight%28%29%0A%u63CF%u8FF0%uFF1A%u8FED%u4EE3%u6570%u7EC4%u7684%u6240%u6709%u9879%uFF0C%u6784%u5EFA%u4E00%u4E2A%u6700%u7EC8%u7684%u8FD4%u56DE%u503C%u3002%0A%u8FD9%u4E24%u4E2A%u51FD%u6570%u9664%u4E86%u65B9%u5411%u4E0D%u4E00%u81F4%uFF0C%u5176%u4ED6%u5168%u90E8%u4E00%u81F4%0A%0A%20%20%20%20%0A%20%20%20%20%0A%0A</center><br/></en-note>]]></content><created>20171031T100131Z</created><updated>20171101T055420Z</updated><note-attributes><source>maxiang</source><source-application>maxiang</source-application><reminder-order>0</reminder-order><content-class>maxiang</content-class></note-attributes></note>
</en-export>
